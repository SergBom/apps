/*
 * File: app/view/GKUstop/mainViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Portal.view.GKUstop.mainViewController', {
  extend: 'Ext.app.ViewController',
  alias: 'controller.gkustop.main',

  onKPadd: function(button, e, eOpts) {
    var w=Ext.create('Portal.view.GKUstop.KPedit').show();
    w.down('form').getForm().setValues({id:0});
  },

  onKPedit: function(button, e, eOpts) {
    var d=this.getReferences().grid.getSelection()[0].data,w=Ext.create('Portal.view.GKUstop.KPedit').show();
    w.setTitle('Заявление № '+d.zayav);
    w.down('form').getForm().setValues(d);
  },

  onRRedit: function(button, e, eOpts) {
    var d=this.getReferences().grid.getSelection()[0].data,w=Ext.create('Portal.view.GKUstop.RRedit').show();
    w.setTitle('Заявление № '+d.zayav);
    w.down('form').getForm().setValues(d);
  },

  onExcel: function(button, e, eOpts) {
    var C=Ext.getStore("GKUstop.main").getConfig();
    console.log(JSON.stringify(C.filters.items));
    window.open('data/GKUstop/TOexcel01.php?filter='+JSON.stringify(C.filters.items));
    //window.open('data/OpisDel/report.php?Year='+r.Year.getValue()+'&Npp='+r.Npp.getValue());
  },

  onRefresh: function(button, e, eOpts) {
    Ext.getStore("GKUstop.main").reload();
  },

  onFilterReset: function(button, e, eOpts) {
    this.getReferences().grid.getPlugin('GKUfilter').clearFilters();
  },

  onEngineers: function(button, e, eOpts) {
    w=Ext.create('Portal.view.GKUstop.Engineers').show();
  },

  onGridSelectionChange: function(model, selected, eOpts) {
    var r=this.getReferences();
    r.btKPedit.setDisabled(selected.length===0);
    r.btRRedit.setDisabled(selected.length===0);
    //console.log(selected[0].data);
    //r.info.setBind(selected[0]);
  },

  onFilterChange: function(store, filters, eOpts) {

    store.getProxy().setConfig({
      extraParams:{filter:JSON.stringify(filters)}
    });

    //console.log(store.getProxy());

    //Ext.getStore('GKUstop.main').setConfig({})

    store.reload(); //loadPage(1);//,{params:{filter:JSON.stringify(filters)}});
  },

  onAfterRender: function(component, eOpts) {
    var AccessEdit=Portal.util.Util.appAccessEdit(this.getView().xtype),ORG=Portal.util.Util.appOrg(this.getView().xtype),
      ref=this.getReferences();
    //console.log('AccessEdit='+AccessEdit);//console.log(ORG);
    if(!AccessEdit){
      if(ORG.id=="1"){
        ref.blFKP.setDisabled(true);
        ref.blRR.setDisabled(false);
      }else if(ORG.id=="2"){
        ref.blFKP.setDisabled(false);
        ref.blRR.setDisabled(true);
      }}
      Ext.getStore('GKUstop.main').loadPage(1);
  }

});
