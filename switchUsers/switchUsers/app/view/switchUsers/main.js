/*
 * File: app/view/switchUsers/main.js
 *
 * This file was generated by Sencha Architect version 4.1.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Portal.view.switchUsers.main', {
  extend: 'Ext.panel.Panel',
  alias: 'widget.switchusersmain',

  requires: [
    'Portal.view.switchUsers.mainViewModel',
    'Portal.view.switchUsers.mainViewController',
    'Ext.tree.Panel',
    'Ext.tree.View',
    'Ext.toolbar.Toolbar',
    'Ext.button.Button',
    'Ext.grid.Panel',
    'Ext.grid.column.RowNumberer',
    'Ext.grid.column.Template',
    'Ext.XTemplate',
    'Ext.grid.column.Date',
    'Ext.grid.column.Check',
    'Ext.form.field.Text'
  ],

  controller: 'switchusers.main',
  viewModel: {
    type: 'switchusers.main'
  },
  height: 427,
  width: 694,
  layout: 'border',
  title: 'My Panel',

  items: [
    {
      xtype: 'treepanel',
      region: 'west',
      split: true,
      reference: 'tree',
      width: 307,
      collapsed: false,
      title: 'Список отделов',
      store: 'switchUsers.tree',
      displayField: 'name',
      dockedItems: [
        {
          xtype: 'toolbar',
          dock: 'top',
          items: [
            {
              xtype: 'button',
              iconCls: 'icon-refresh',
              text: 'Обновить список',
              listeners: {
                click: 'onRefreshClick'
              }
            },
            {
              xtype: 'button',
              hidden: true,
              text: 'Запуск синхронизации'
            }
          ]
        }
      ],
      listeners: {
        selectionchange: 'onTreeSelectionChange'
      }
    },
    {
      xtype: 'gridpanel',
      region: 'center',
      title: 'Пользователи',
      store: 'switchUsers.users',
      columns: [
        {
          xtype: 'rownumberer',
          width: 39
        },
        {
          xtype: 'templatecolumn',
          fixed: true,
          tpl: [
            '{userFm} {userIm} {userOt}'
          ],
          width: 240,
          dataIndex: 'userFm',
          text: 'Ф.И.О.'
        },
        {
          xtype: 'datecolumn',
          width: 90,
          dataIndex: 'dateOff',
          text: 'Выключить с',
          format: 'Y-m-d'
        },
        {
          xtype: 'datecolumn',
          width: 90,
          dataIndex: 'dateOn',
          text: 'Включить с',
          format: 'Y-m-d'
        },
        {
          xtype: 'checkcolumn',
          disabled: true,
          disabledCls: 'x-item',
          width: 68,
          dataIndex: 'off',
          text: 'вкл/выкл'
        },
        {
          xtype: 'checkcolumn',
          disabled: true,
          disabledCls: 'x-item',
          width: 68,
          dataIndex: 'say',
          text: 'Видимый'
        },
        {
          xtype: 'gridcolumn',
          dataIndex: 'refer',
          text: 'Заметки'
        }
      ],
      viewConfig: {
        getRowClass: function(record, rowIndex, rowParams, store) {
          //console.log('say='+record.data.say);
          //console.log('off='+record.data.off);
          if(!record.data.say){return 'user-nosay';
          }else if(record.data.off){return 'user-off';}
        }
      },
      dockedItems: [
        {
          xtype: 'toolbar',
          dock: 'top',
          hidden: true,
          items: [
            {
              xtype: 'textfield',
              width: 284,
              emptyText: 'быстрый поиск'
            }
          ]
        },
        {
          xtype: 'toolbar',
          dock: 'top',
          items: [
            {
              xtype: 'button',
              iconCls: 'icon-add',
              text: 'Добавить пользователя',
              listeners: {
                click: 'onAddUserClick'
              }
            },
            {
              xtype: 'button',
              iconCls: 'icon-refresh',
              text: 'Обновить список',
              listeners: {
                click: 'onRefreshUsersClick'
              }
            }
          ]
        }
      ],
      listeners: {
        itemdblclick: 'onGridItemDblClick'
      }
    }
  ],
  listeners: {
    afterrender: 'onAfterRender'
  }

});