/*
 * File: app/view/ScanDocs/mainViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Portal.view.ScanDocs.mainViewController', {
  extend: 'Ext.app.ViewController',
  alias: 'controller.scandocsmain',

  ShowCadNums: function(filter) {
    var r=this.getReferences(),s=Ext.getStore('ScanDocs.MainData'),frm=JSON.stringify(r.formPanel.getForm().getFieldValues()),d=r.detailPanel.getForm();
    d.setValues({count_dpd:'считаю...',count_opis:'считаю...',count_retro:'считаю...'});
    s.getProxy().setConfig({extraParams:{
    frm:frm,
    opis:r.FilterOpis.getValue(),
    retro:r.FilterRetro.getValue(),
    filter:r.seek.getValue()}});
    s.loadPage(1);
    d.load({params:{f:frm}});
  },

  onCalcClick: function(button, e, eOpts) {
    this.ShowCadNums();
  },

  onResetClick: function(button, e, eOpts) {
    var r=this.getReferences();
    r.formPanel.getForm().reset();
    r.seek.setValue('');
    this.ShowCadNums();
  },

  onTextfieldSpecialkey: function(field, e, eOpts) {
    if(e.getKey()===e.ENTER){this.onSeek();}
  },

  onSeek: function(button, e, eOpts) {
    this.ShowCadNums();
  },

  onFilterOpisChange: function(field, newValue, oldValue, eOpts) {
    this.ShowCadNums();
  },

  onFilterRetroChange: function(field, newValue, oldValue, eOpts) {
    this.ShowCadNums();
  },

  onAddDPDClick: function(button, e, eOpts) {
    Ext.create('Portal.view.ScanDocs.dpd').show();
  },

  onEditDPDClick: function(button, e, eOpts) {
    w=Ext.create('Portal.view.ScanDocs.rename').show();
    w.down("form").getForm().setValues(this.getReferences().tblMain.getSelection()[0].data);
  },

  onMainSelectionChange: function(model, selected, eOpts) {
    this.getReferences().btnRename.setDisabled(selected.length===0);
  },

  onYear2Change: function(field, newValue, oldValue, eOpts) {
    var r=this.getReferences();
    r.btnCalc2.setDisabled(false);
    r.btnCalc3.setDisabled(false);
  },

  onCalc2Click: function(button, e, eOpts) {
    var y=this.getReferences().year.getValue();
    this.getStore('statCommon').load({params:{
      year:y,type:1
    }});
  },

  onCalc3Click: function(button, e, eOpts) {
    var y=this.getReferences().year.getValue();
    this.getStore('statCommon').load({params:{
      year:y,type:2
    }});
  },

  onExcel1Click: function(button, e, eOpts) {
    var y=this.getReferences().year.getValue();
    Ext.Ajax.request({
      url: 'data/ScanDocs/excel1.php',
      year:y,
      success: function(response, opts) {
        var obj = Ext.decode(response.responseText);
        console.dir(obj);
      },
      failure: function(response, opts) {
        console.log('server-side failure with status code ' + response.status);
      }
    });
  },

  onTabCommonActivate: function(component, eOpts) {
    this.getStore('vYears').load();
  },

  onOtdel: function(field, newValue, oldValue, eOpts) {
    /*this.getReferences().sotr.setDisabled(!newValue);
    if(newValue){
    //  this.getReferences().sotr.setDisabled(false);
    this.getViewModel().getStore('sotr').load({params:{otdel:newValue}});

  }*/
  },

  onSaySotr: function(button, e, eOpts) {
    var f=this.getReferences().formStatSotr.getForm();
    console.log(f);
    this.getViewModel().setStore('statSotr').load(

    );
  },

  onPanelAfterRender: function(component, eOpts) {
    var AccessEdit = Portal.util.Util.appAccessEdit(this.getView().xtype),
      ref=this.getReferences();
    ref.TabMain.setActiveTab(ref.TabStat);
    //ref.TabError.setHidden( !AccessEdit );
    this.onCalcClick();
    //ref.detailPanel.getForm().load();
    //this.ShowCadNums();
  }

});
