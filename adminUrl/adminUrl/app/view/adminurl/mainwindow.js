/*
 * File: app/view/adminurl/mainwindow.js
 *
 * This file was generated by Sencha Architect version 4.1.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Portal.view.adminurl.mainwindow', {
  extend: 'Ext.panel.Panel',
  alias: 'widget.adminurl',

  requires: [
    'Portal.view.adminurl.mainwindowViewModel',
    'Portal.view.adminurl.mainwindowViewController',
    'Ext.tree.Panel',
    'Ext.tree.View',
    'Ext.tree.Column',
    'Ext.grid.column.Action',
    'Ext.toolbar.Toolbar',
    'Ext.button.Button'
  ],

  controller: 'adminurlmainwindow',
  viewModel: {
    type: 'adminurlmainwindow'
  },
  height: 274,
  id: 'appadminurl',
  width: 612,
  layout: 'fit',
  title: 'ADMIN LINKS',

  items: [
    {
      xtype: 'treepanel',
      reference: 'panelMain',
      store: 'adminurl.MyTreeStore',
      rootVisible: false,
      columns: [
        {
          xtype: 'treecolumn',
          renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
            return (record.get('url'))?'<a href="'+record.get('url')+'" target="_blank">'+ value +'</a>':value;
          },
          flex: 1,
          dataIndex: 'name',
          text: 'Ссылка'
        },
        {
          xtype: 'gridcolumn',
          dataIndex: 'coment',
          text: 'Комментарий'
        },
        {
          xtype: 'gridcolumn',
          renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
            return (value==='1') ? '<span style="color:red;">admin</span>':'';
          },
          width: 40,
          dataIndex: 'admin',
          text: 'admin'
        },
        {
          xtype: 'gridcolumn',
          hidden: true,
          dataIndex: 'id',
          text: 'id'
        },
        {
          xtype: 'actioncolumn',
          items: [
            {
              handler: function(view, rowIndex, colIndex, item, e, record, row) {
                var ed = Ext.create('Portal.view.adminurl.addWindow').show();
                ed.getReferences().form.getForm().setValues({
                  id:record.data.id,
                  flag:0
                });
              },
              iconCls: 'icon-add'
            },
            {
              handler: function(view, rowIndex, colIndex, item, e, record, row) {
                var addWindow = Ext.create('Portal.view.adminurl.addWindow').show();
                addWindow.getReferences().form.getForm().setValues(record.data);
                addWindow.getReferences().form.getForm().setValues({
                  flag:1
                });
              },
              iconCls: 'icon-edit'
            },
            {
              handler: function(view, rowIndex, colIndex, item, e, record, row) {
                Ext.Msg.show({title:'Внимание',
                  msg: 'Действительно желаете удалить данную ссылку?',
                  icon: Ext.Msg.QUESTION,
                  buttons: Ext.Msg.YESNO,
                  fn: function(btn) {
                    if (btn === 'yes') {
                      Ext.Ajax.request({
                        url: 'data/adminurl/del.php',
                        params: {
                          id: record.get('id'),
                        },
                        failure: function(){
                          Ext.Msg.show({title:'Ошибка',
                            msg: 'Не удалось выполнить запрос',
                            icon: Ext.msg.ERROR,
                          buttons: Ext.Msg.OK});
                        },
                        success: function(response){
                          Ext.getStore('adminurl.MyTreeStore').load();
                        }
                      });
                    }
                  }

                });

              },
              iconCls: 'icon-delete'
            }
          ]
        }
      ]
    }
  ],
  dockedItems: [
    {
      xtype: 'toolbar',
      dock: 'top',
      items: [
        {
          xtype: 'button',
          id: 'baton_adminurl_new',
          iconCls: 'icon-add',
          text: 'Добавить в корень',
          listeners: {
            click: 'onBaton_adminurl_newClick'
          }
        },
        {
          xtype: 'button',
          id: 'btnAdminUrlRefresh',
          iconCls: 'icon-refresh',
          listeners: {
            click: 'onBtnAdminUrlRefreshClick'
          }
        }
      ]
    }
  ],
  listeners: {
    afterrender: 'onAppadminurlAfterRender'
  }

});