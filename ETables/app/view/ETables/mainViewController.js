/*
 * File: app/view/ETables/mainViewController.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Portal.view.ETables.mainViewController', {
  extend: 'Ext.app.ViewController',
  alias: 'controller.etables.main',

  onTableSelectionChange: function(model, selected, eOpts) {
    var r=this.getReferences(),db=selected[0].data,mp=r.MainPanel;
    r.pInfo.setHtml(db.info);
    //console.log(selected);
    r.btnTblEdit.setDisabled(false);
    r.btnTEdit.setDisabled(false);
    r.btnDelete.setDisabled(false);
  },

  onTableItemDblClick: function(dataview, record, item, index, e, eOpts) {
    var r=this.getReferences(),db=record.data,mp=r.MainPanel,
      newcolumns=[{xtype:'rownumberer'}],mc=[],
      MainStore=Ext.getStore('ETables.main'),
      MainModel=MainStore.getModel();
    FieldStore=this.getStore('tbFields');

    mp.setConfig({itemId:db.id});

    console.log(MainModel);
    mp.setTitle(db.title);

    FieldStore.load({params:{main_id:db.id},scope:this,
    callback:function(records,o,success){
      //console.log(records);
      FieldStore.each(function(rec){
        //console.log(rec);
        var tempvar={},r=rec.data;
        console.log(r.field_name);
        if(r.field_name != 'id'){
          tempvar={
            dataIndex:r.field_name,
            tooltip: r.field_name,
            header: r.field_title,
            name: r.field_name,
            xtype:record.get('xtype') //'checkcolumn'
            //            width:100
          };
          newcolumns.push(tempvar);
        }
        mc.push({
          name:r.field_name,
          type:r.xtype
        });
      });

      //MainModel.setConfig({fields:mc});
      mp.reconfigure(MainStore, newcolumns);
      console.log(MainModel);
    }});
    MainStore.load({params:{id:db.id}});
  },

  onTAddClick: function(button, e, eOpts) {
    var w=Ext.create('Portal.view.ETables.TblNew').show();
    w.down("form").getForm().setValues({id:0});
  },

  onRefreshClick: function(button, e, eOpts) {
    Ext.getStore('ETables.tables').reload();
  },

  onEditClick: function(button, e, eOpts) {
    var w=Ext.create('Portal.view.ETables.TblNew');
    w.down("form").getForm().setValues(this.getReferences().tblMain.getSelection()[0].data);
    w.show();
  },

  onEditDBClick: function(button, e, eOpts) {
    var d=this.getReferences().tblMain.getSelection()[0].data,
      w=Ext.create('Portal.view.ETables.TblEdit',{itemId:d.id});
    w.setTitle(d.title);
    w.show();
  },

  onTbAddClick: function(button, e, eOpts) {
    var r=this.getReferences(),tb=r.MainPanel,st=Ext.getStore('ETables.main'),
      id=tb.getItemId();

    /*
    var M=Ext.data.schema.Schema.instances.default.hasEntity('Portal.model.ETables.main');
    console.log(M);


    Ext.Ajax.request({
    url: 'data/ETables/getModelMain.php?main_id='+id,

    success: function(response, opts) {
    var obj = Ext.decode(response.responseText);
    console.dir(obj.data);

    eval(obj.data);

    st.insert(0, rec);
    tb.findPlugin('rowediting').startEdit(rec, 0);
    },

    failure: function(response, opts) {
    console.log('server-side failure with status code ' + response.status);
    }
    });

    */

    //console.log(st.getModel());

    console.log(st.getFields());
    st.insert(0); //, {id:0});
    tb.getView().select(0);
    var rec=tb.getSelection()[0];
    //u=tb.findPlugin('rowediting').startEdit(rec, 0);

    console.log(rec);
    //var view=this.getView();
    /*var rec = new Portal.model.ETables.TblFileds({
    id:0
    });*/


  },

  onTbDelClick: function(button, e, eOpts) {

  },

  onTbRefreshClick: function(button, e, eOpts) {
    Ext.getStore('ETables.main').reload();
  },

  onPanelAfterRender: function(component, eOpts) {
    Ext.getStore('ETables.tables').load();
  }

});
