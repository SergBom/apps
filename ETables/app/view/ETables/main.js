/*
 * File: app/view/ETables/main.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Portal.view.ETables.main', {
  extend: 'Ext.panel.Panel',
  alias: 'widget.etablesmain',

  requires: [
    'Portal.view.ETables.mainViewModel',
    'Portal.view.ETables.mainViewController',
    'Ext.grid.Panel',
    'Ext.grid.column.RowNumberer',
    'Ext.grid.filters.filter.String',
    'Ext.view.Table',
    'Ext.toolbar.Toolbar',
    'Ext.button.Button',
    'Ext.selection.RowModel',
    'Ext.form.field.Checkbox',
    'Ext.grid.filters.Filters',
    'Ext.grid.plugin.RowEditing',
    'Ext.form.field.Date',
    'Ext.form.field.Hidden'
  ],

  controller: 'etables.main',
  viewModel: {
    type: 'etables.main'
  },
  height: 451,
  width: 978,
  layout: 'border',
  title: 'My Panel',
  defaultListenerScope: true,

  items: [
    {
      xtype: 'gridpanel',
      region: 'west',
      split: true,
      reference: 'tblMain',
      width: 262,
      collapsible: true,
      title: 'Таблицы',
      store: 'ETables.tables',
      columns: [
        {
          xtype: 'rownumberer'
        },
        {
          xtype: 'gridcolumn',
          dataIndex: 'title',
          flex: 1,
          text: 'Наименование',
          filter: {
            type: 'string'
          }
        }
      ],
      viewConfig: {
        getRowClass: function(record, rowIndex, rowParams, store) {
          return record.get('refer') > 0 ? 'green-row' : ''; // 'green-row';
        },
        listeners: {
          selectionchange: {
            fn: 'onTableSelectionChange',
            scope: 'controller'
          },
          itemdblclick: {
            fn: 'onTableItemDblClick',
            scope: 'controller'
          }
        }
      },
      dockedItems: [
        {
          xtype: 'toolbar',
          dock: 'top',
          items: [
            {
              xtype: 'button',
              reference: 'btnAdd',
              iconCls: 'icon-add',
              listeners: {
                click: {
                  fn: 'onTAddClick',
                  scope: 'controller'
                }
              }
            },
            {
              xtype: 'button',
              reference: 'btnDelete',
              disabled: true,
              iconCls: 'icon-delete'
            },
            {
              xtype: 'button',
              reference: 'btnRefresh',
              iconCls: 'icon-refresh',
              listeners: {
                click: {
                  fn: 'onRefreshClick',
                  scope: 'controller'
                }
              }
            },
            {
              xtype: 'button',
              reference: 'btnTEdit',
              disabled: true,
              iconCls: 'icon-edit',
              tooltip: 'Свойства таблицы',
              listeners: {
                click: {
                  fn: 'onEditClick',
                  scope: 'controller'
                }
              }
            },
            {
              xtype: 'button',
              reference: 'btnTblEdit',
              disabled: true,
              iconCls: 'icon-db',
              tooltip: 'Структура таблицы',
              listeners: {
                click: {
                  fn: 'onEditDBClick',
                  scope: 'controller'
                }
              }
            }
          ]
        },
        {
          xtype: 'toolbar',
          dock: 'bottom',
          items: [
            {
              xtype: 'checkboxfield',
              reference: 'SayRefTables',
              flex: 1,
              boxLabel: 'Показать справочные таблицы',
              listeners: {
                change: {
                  fn: 'onReferChange',
                  scope: 'controller'
                }
              }
            }
          ]
        }
      ],
      selModel: {
        selType: 'rowmodel'
      },
      plugins: [
        {
          ptype: 'gridfilters',
          id: 'mainFilter'
        }
      ]
    },
    {
      xtype: 'gridpanel',
      region: 'center',
      reference: 'MainPanel',
      title: '*',
      columns: [
        {
          xtype: 'rownumberer'
        },
        {
          xtype: 'gridcolumn',
          text: 'MyColumn',
          editor: {
            xtype: 'datefield',
            format: 'Y-m-d'
          }
        }
      ],
      dockedItems: [
        {
          xtype: 'toolbar',
          dock: 'top',
          items: [
            {
              xtype: 'button',
              reference: 'tbAdd',
              disabled: true,
              iconCls: 'icon-add',
              listeners: {
                click: {
                  fn: 'onTbAddClick',
                  scope: 'controller'
                }
              }
            },
            {
              xtype: 'button',
              reference: 'tbDel',
              disabled: true,
              iconCls: 'icon-delete',
              listeners: {
                click: {
                  fn: 'onTbDelClick',
                  scope: 'controller'
                }
              }
            },
            {
              xtype: 'button',
              reference: 'tbRefresh',
              disabled: true,
              iconCls: 'icon-refresh',
              listeners: {
                click: {
                  fn: 'onTbRefreshClick',
                  scope: 'controller'
                }
              }
            },
            {
              xtype: 'button',
              iconCls: 'filter-minus',
              text: 'Очистить фильтр',
              listeners: {
                click: {
                  fn: 'onMainFilterMinus',
                  scope: 'controller'
                }
              }
            }
          ]
        }
      ],
      plugins: [
        {
          ptype: 'rowediting',
          autoUpdate: true,
          listeners: {
            beforeedit: 'onRowEditingBeforeEdit'
          }
        },
        {
          ptype: 'gridfilters'
        }
      ],
      selModel: {
        selType: 'rowmodel',
        mode: 'SINGLE'
      },
      listeners: {
        selectionchange: {
          fn: 'onMPSelectionChange',
          scope: 'controller'
        }
      }
    },
    {
      xtype: 'panel',
      region: 'south',
      reference: 'pInfo',
      height: 61,
      scrollable: true
    },
    {
      xtype: 'hiddenfield',
      region: 'east',
      width: 150,
      fieldLabel: 'Label'
    }
  ],
  listeners: {
    afterrender: {
      fn: 'onPanelAfterRender',
      scope: 'controller'
    }
  },

  onRowEditingBeforeEdit: function(editor, context, eOpts) {
    console.log('editor');
    console.log(editor);


    var id=this.getReferences().MainPanel.getMinWidth();
        console.log('id='+id+'   context=');

        context.record.data.a_id=id;
        console.log(context);

  }

});